웹페이지는 연속성이 없다

변수를 아무리 만들어놔도 이 페이지가 끝나고 다른 페이지로 넘어가면 아무것도 안남는다

request.setAttribute 리퀘스트중에 공간을 만들어준다 
scope 리퀘스트영역  명령할때마다 리퀘스트 스코프가 잡힘


form 태그 안에 들어간건 전부 매개변수 (파라메터로 받아준다)

url창에 뜨는지 안뜨는지만 다르고 post get 둘 다 파라메터로 받아준다

get 방식 : 버튼을 누른만큼 실행된다, 실행한게 url에 나타난다

post 방식 : 여러번 눌러도 한번만 실행된다, url에 안나타남(전부숨김)

HTML로 변환을 시켜서 보낸다 마지막에(


장바구니에 버팔로윙을 담고 계속 쇼핑하기~ 하면
해쉬브라운을 담았으면 전에 담은 버팔로윙이 장바구니에 남아있을까?

리퀘스트 - 삭제됨

계속 리퀘스트로 끌고다닐 수 없으니

세션을 사용해서
세션에 전부 담아준다
로그인해서 로그아웃 할때까지 전부 세션에 담아라~

세션은 보통 3~5분정도 그 페이지를 사용하지 않으면 로그아웃되게 해야한다
그 로그아웃되는게 세션만료~

다음은 안그러니 개인정보 조심

데이터는 기억할수있는 4가지

페이지스콥
회원가입해서 넘어가면
제대로된 걸 입력해주세요~

리퀘스트스콥
로그인했을때 가입축하~


세션스콥
로그인해서~로그아웃할떄까지 정보들을 세션스콥에 담는다

어플리케이션 스콥
어디서든 공통된 데이터를 써야한다 

주석
<%-- --%> jsp 
<!-- --> jsp html (느낌표로 한건 코드를 보면 보인다, 출력문에만 안보일뿐)

지시어(Directive): <%@ %>
page지시어: <%@page %>
include 지시어: <%@include %> 그대로 복사붙여넣기
Taglib 지시어: <%@taglib %> jsp에서 라이브러리를 가져다 쓰는법, 
  JSTL 사용해볼거다 java standad tag library
   <c:out>

JSP page Scripting Elements
  Scriptlet : <% %> 잘안씀, 이안에 자바코드를 그대로 집어넣을 수 있다
  표현식(Expression) : <%= %>
  선언(Declaration) : <%! %> 잘안씀, 멤버변수 만들어줄 수 있다,
    여기서 만들어준 변수는 static한 변수랑 똑같이 취급이 된다 (서블릿위주로 돌아가서)

자바코드를 jsp에서 사용할 일은 없다 
만약 사용한다면 그건 잘못 짠거다

화면에 출력하는건 출력만한다
출력에 연산이 들어가면 안된다

클라이언트는 뷰만 신경쓴다 (뷰를 제외한건 전부 서버에서 처리)
각자 할 일이 있는거

${param.msg}

<%
 out.print(request.getParameter("msg"))
%>

<%= request.getParameter("msg")%>

위아래 3가지가 같은 문장이다, 편한거 쓰자~
${msg}

<%
 out.print(request.getAttribute("msg"))
%>

<%= request.getAttribute("msg")%>

인크루드가 되어지는 페이지에서 <페이지랭기지 등 설정값>은 빠지는게 맞는데
한글을 쓰는곳에서는 사용해야한다 아니면 한글이 깨져서 넘어간다


배포관리자가 환경설정값을 가지고 있는다?
배포관리자 = 환경설정 연관된다
     .xml          config

jsp => java => class => html
클라이언트가 jsp를 요청하면 
그걸 java로 변환시켜서 컴파일해서 class로 변환
변환되면 html로 변환시켜서 클라이언트가 보는 화면에 보여준다

init 생성자 다음에 초기화시켜줘야할떄 나오는거?

destroy

service

클라이언트가 접속을하면 메소드단위로 처리한다
인스턴스는 하나만 만들어준다

work 폴더 밑에 있는건 지워도 실행하면 다시 생긴다

include
 forward와는 반대의 명령이다.
정적인 include란, include 될 대상의 코드를 복사하여 그대로  붙여넣기 되는것
동적인 include란, 실행된 대상 페이지 파일의 결과를 복사하여 그대로  붙여넣기 하는것


xml의 데이터는 실행하는 시점에서 읽어들여서 처리한다




en.do
  doGet()
	enTest11.jsp호출
	이름, 생년을 입력받도록
	en.do를 호출 en.do의 doPost를 호출
	하면서 이름, 생년을 넘겨준다
	현재년도에서 생년을 빼서 몇살인지 산정한 후 출력
  doPost()
	enOut.jsp 호출
	


Java Bean class 를 만들려면 ==> instance를 만들어야한다
==> abstract class ~~{} 는 안된다  interface~~{} 도 안된다
	생성자가 private 하면 안된다





============
과제

1. 자바 씨큐어코딩에 대해 찾아보고 숙지하기
